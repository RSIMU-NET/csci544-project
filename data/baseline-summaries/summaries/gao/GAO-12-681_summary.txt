collaboration . agile development emphasizes collaboration more than traditional approaches do . for example , to coordinate the many disciplines of an iteration , such as design and testing , customers work frequently and closely with technical staff . furthermore , teams are often self - directed , meaning tasks and due dates are done within the team and coordinated with project sponsors and stakeholders as needed to complete the tasks . in contrast , with traditional project management , customer and technical staff typically work separately , and project tasks are prescribed and monitored by a project manager , who reports to entities such as a program management office . see figure 1 for a depiction of agile development compared to waterfall development . there are numerous frameworks available to agile practitioners . one framework , called extreme programming ( xp ) , includes development techniques . another framework , called scrum , defines management processes and roles . the scrum framework is widely used in the public and private sector , and its terminology is often used in agile discussions . for example , scrum iterations are called sprints , which are bundled into releases . sprint teams collaborate with minimal management direction , often co - located in work rooms . they meet daily and post their task status visibly , such as on wall charts . other concepts commonly used by sprint teams are user stories , story points , and backlog . user stories convey the customers' requirements . a user story typically follows the construct of “as a < type of user > i want < some goal > so that < some reason > .” for example , “as a claims processor , i want to check a claim payment status so that i can promptly reply to a customer's request for payment status.” each user story is assigned a level of effort , called story points , which are a relative unit of measure used to communicate complexity and progress between the business and development sides of the project . to ensure that the product is usable at the end of every iteration , teams adhere to an agreed - upon definition of done . this includes stakeholders defining how completed work conforms to an organization's standards , conventions , and guidelines . the backlog is a list of user stories to be addressed by working software . if new requirements or defects are discovered , these can be stored in the backlog to be addressed in future iterations . progress in automating user stories is tracked daily using metrics and tools . an example of a metric is velocity . velocity tracks the rate of work using the number of story points completed or expected to be completed in an iteration . for example , if a team completed 100 story points during a four - week iteration , the velocity for the team would be 100 story points every four weeks . an example of a tool is a burn - down chart , which tracks progress and the amount of work remaining for an iteration or for a release , which is made up of multiple iterations .