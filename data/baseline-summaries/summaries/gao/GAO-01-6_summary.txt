invention begins . once basic principles are observed , practical applications can be invented . the application is speculative , and there is no proof or detailed analysis to support the assumption . examples are still limited to paper studies . active research and development is initiated . this includes analytical studies and laboratory studies to physically validate analytical predictions of separate elements of the technology . examples include components that are not yet integrated or representative . basic technological components are integrated to establish that the pieces will work together . this is relatively “low fidelity” compared to the eventual system . examples include integration of “ad hoc” hardware in a laboratory . fidelity of breadboard technology increases significantly . the basic technological components are integrated with reasonably realistic supporting elements so that the technology can be tested in a simulated environment . examples include “high fidelity” laboratory integration of components . representative model or prototype system , which is well beyond the breadboard tested for technology readiness level 5 , is tested in a relevant environment . represents a major step up in a technology's demonstrated readiness . examples include testing a prototype in a high fidelity laboratory environment or in simulated operational environment . prototype near or at planned operational system . represents a major step up from technology readiness level 6 , requiring the demonstration of an actual system prototype in an operational environment , such as in an aircraft , vehicle , or space . examples include testing the prototype in a test bed aircraft . technology has been proven to work in its final form and under expected conditions . in almost all cases , this technology readiness level represents the end of true system development . examples include developmental test and evaluation of the system in its intended weapon system to determine if it meets design specifications . actual application of the technology in its final form and under mission conditions , such as those encountered in operational test and evaluation . in almost all cases , this is the end of the last “bug fixing” aspects of true system development . examples include using the system under operational mission conditions . the following are our comments on dod's letter dated december 14 , 2000 . we are cognizant of the fact that the national missile defense program is driving the need date for sbirs - low and not the converse . we do not intend to suggest that the sbirs - low acquisition schedule be a driver for the national missile defense program schedule . our primary goal in making this recommendation is to help ensure sbirs - low is acquired at lower risk and will satisfy critical missile defense requirements . this is why we are also making our second recommendation — to develop alternative approaches to satisfy critical missile defense midcourse tracking and discrimination requirements in case sbirs - low ( under a new lower risk schedule ) cannot be deployed when needed . we disagree that we misstate the risks of the sbirs - low incremental software development strategy . we recognize that an evolutionary , or incremental , approach to software development is valid .