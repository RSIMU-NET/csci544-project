testing . another critical step is to test each individual patch against various systems configurations in a test environment before installing it enterprisewide to determine any impact on the network . such testing will help determine whether the patch functions as intended and its potential for adversely affecting the entity's systems . in addition , while patches are being tested , organizations should also be aware of workarounds , which can provide temporary relief until a patch is applied . testing has been identified as a challenge by government and private - sector officials , since the urgency in remediating a security vulnerability can limit or delay comprehensive testing . time pressures can also result in software vendors' issuing poorly written patches that can degrade system performance and require yet another patch to remediate the problem . for instance , microsoft has admittedly issued security patches that have been recalled because they have caused systems to crash or are too large for a computer's capacity . further , a complex , heterogeneous systems environment can lengthen this already time - consuming and time - sensitive process because it takes longer to test the patch in various systems configurations . distributing patches . and these are only the incidents that are reported . according to the director of cert / cc , as much as 80 percent of actual incidents go unreported , in most cases because the organization was either unable to recognize that its systems had been penetrated ( because there were no indications of penetration or attack ) or because it was reluctant to report an incident . figure 2 illustrates the number of incidents reported to cert / cc from 1995 through the second quarter of 2003 . according to cert / cc , about 95 percent of all network intrusions could be avoided by keeping systems up to date with appropriate patches ; however , such patches are often not quickly or correctly applied . maintaining current patches is becoming more difficult , as the length of time between the awareness of a vulnerability and the introduction of an exploit is shrinking . for example , the blaster worm was released almost simultaneously with the announcement of the vulnerability it exploited . successful attacks on unpatched software vulnerabilities have caused billions of dollars in damage . following are examples of significant damage caused by worms that could have been prevented had available patches been effectively installed: in september 2001 the nimda worm appeared , reportedly infecting hundreds of thousands of computers around the world , using some of the most significant attack methods of code red ii and 1999's melissa virus that allowed it to spread widely in a short amount of time . a patch had been made publicly available the previous month . on january 25 , 2003 , slammer triggered a global internet slowdown and caused considerable harm through network outages and other unforeseen consequences . as we discussed in our april testimony , the worm reportedly shut down a 911 emergency call center , canceled airline flights , and caused automated teller machine ( atm ) failures .