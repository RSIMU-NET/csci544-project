i am pleased to be here today to participate in the subcommittee's hearing on recent cyber incidents and the role of software patch management in mitigating the risks that these types of events will recur .

current incidents inundating the internet , coupled with the increasing number and sophistication of attacks , place both federal and private - sector operations and assets at considerable risk .

several of these incidents exploited software vulnerabilities for which patches were already publicly available .

in my testimony today i will discuss ( 1 ) two recent software vulnerabilities and related responses ; ( 2 ) effective patch management practices , related federal efforts , and other available tools ; and ( 3 ) additional steps that can be taken to better protect sensitive information systems from software vulnerabilities .

in preparing for this testimony , we analyzed professional information technology security literature , including research studies and reports about cybersecurity - related vulnerabilities .

we also interviewed private - sector and federal officials about their patch management experiences .

and we analyzed relevant documents and interviewed officials of the patch authentication and dissemination capability ( padc ) service and supporting contractors to determine the service's current capabilities and usage .

finally , we reviewed actions taken by padc and agency officials in response to recent cybersecurity vulnerabilities .

our work was performed in accordance with generally accepted government auditing standards , from june to september 2003 .

flaws in software code that could cause a program to malfunction generally result from programming errors that occur during software development .

the increasing complexity and size of software programs contribute to the growth in software flaws .

for example , microsoft windows 2000 reportedly contains about 35 million lines of code , compared with about 15 million lines for windows 95 .

as reported by the national institute of standards and technology ( nist ) , based on various studies of code inspections , most estimates suggest that there are as many as 20 flaws per thousand lines of software code .

while most flaws do not create security vulnerabilities , the potential for these errors reflects the difficulty and complexity involved in delivering trustworthy code .

by exploiting software vulnerabilities , hackers and others who spread malicious code can cause significant damage , ranging from web site defacement to taking control of entire systems , and thereby being able to read , modify , or delete sensitive information , destroy systems , disrupt operations , or launch attacks against other organizations' systems .

between 1995 and the first half of 2003 , the cert coordination center ( cert / cc ) reported 11,155 security vulnerabilities that resulted from software flaws .

figure 1 illustrates the dramatic growth in security vulnerabilities over these years .

the growing number of known vulnerabilities increases the number of potential attacks created by the hacker community .

as vulnerabilities are discovered , attackers may attempt to exploit them .

attacks can be launched against specific targets or widely distributed through viruses and worms .

worms and viruses are commonly used to launch denial - of - service attacks , which generally flood targeted networks and systems with so much transmission of data that regular traffic is either slowed or completely interrupted .

such attacks have been utilized ever since the groundbreaking morris worm , which brought 10 percent of the systems connected to internet systems to a halt in november 1988 .

in 2001 , the code red worm used a denial - of - service attack to affect millions of computer users by shutting down web sites , slowing internet service , and disrupting business and government operations .

this type of attack continues to be used by recent worms , including blaster , which i will discuss further later in my testimony .

the sophistication and effectiveness of cyber attack have steadily advanced .

because automated tools now exist , cert / cc has noted , attacks that once took weeks or months to propagate over the internet now take just hours , or even minutes .

code red achieved an infection rate of over 20,000 systems within 10 minutes , foreshadowing more damaging and devastating attacks .

indeed , earlier this year , the slammer worm , which successfully attacked at least 75,000 systems , became the fastest computer worm in history , infecting more than 90 percent of vulnerable systems within 10 minutes .

frequently , skilled hackers develop exploitation tools and post them on internet hacking sites .

these tools are then readily available for others to download , allowing even inexperienced programmers to create a computer virus or to literally point and click to launch an attack .

according to a nist publication , 30 to 40 new attack tools are posted to the internet every month .

the threat to systems connected to the internet is illustrated by the increasing number of computer security incidents reported to cert / cc .

this number rose from just under 10,000 in 1999 to over 52,000 in 2001 , to about 82,000 in 2002 , and to over 76,000 for the first and second quarters of 2003 .

and these are only the incidents that are reported .

according to the director of cert / cc , as much as 80 percent of actual incidents go unreported , in most cases because the organization was either unable to recognize that its systems had been penetrated ( because there were no indications of penetration or attack ) or because it was reluctant to report an incident .

figure 2 illustrates the number of incidents reported to cert / cc from 1995 through the second quarter of 2003 .

according to cert / cc , about 95 percent of all network intrusions could be avoided by keeping systems up to date with appropriate patches ; however , such patches are often not quickly or correctly applied .

maintaining current patches is becoming more difficult , as the length of time between the awareness of a vulnerability and the introduction of an exploit is shrinking .

for example , the blaster worm was released almost simultaneously with the announcement of the vulnerability it exploited .

successful attacks on unpatched software vulnerabilities have caused billions of dollars in damage .

following are examples of significant damage caused by worms that could have been prevented had available patches been effectively installed: in september 2001 the nimda worm appeared , reportedly infecting hundreds of thousands of computers around the world , using some of the most significant attack methods of code red ii and 1999's melissa virus that allowed it to spread widely in a short amount of time .

a patch had been made publicly available the previous month .

on january 25 , 2003 , slammer triggered a global internet slowdown and caused considerable harm through network outages and other unforeseen consequences .

as we discussed in our april testimony , the worm reportedly shut down a 911 emergency call center , canceled airline flights , and caused automated teller machine ( atm ) failures .

according to media reports , first usa inc. , an internet service provider , experienced network performance problems after an attack by the slammer worm , due to a failure to patch three of its systems .

additionally , the nuclear regulatory commission reported that slammer also infected a nuclear power plant's network , resulting in the inability of the computers to communicate with each other , disrupting two important systems at the facility .

in july 2002 , microsoft had released a patch for its software vulnerability that was exploited by slammer .

nevertheless , according to media reports , some of microsoft's own systems were infected by slammer .

in addition to understanding the threat posed by security vulnerabilities , it is useful to understand the process of vulnerability identification and response .

in general , when security vulnerabilities are discovered , a process is initiated to effectively address the situation through appropriate reporting and response .

typically , this process begins when security vulnerabilities are discovered by software vendors , security research groups , users , or other interested parties , including the hacker community .

when a software vendor is made aware of a vulnerability in its product , the vendor typically first validates that the vulnerability indeed exists .

if the vulnerability is deemed critical , the vendor may convene a group of experts , including major clients and key incident - response groups such the federal computer incident response center ( fedcirc ) and cert / cc , to discuss and plan remediation and response efforts .

after a vulnerability is validated , the software vendor develops and tests a patch and / or workaround .

a workaround may entail blocking access to or disabling vulnerable programs .

the incident response groups and the vendor typically prepare a detailed public advisory to be released at a set time .

the advisory often contains a description of the vulnerability , including its level of criticality ; systems that are affected ; potential impact if exploited ; recommendations for workarounds , and web site links where a patch ( if publicly available ) can be downloaded .

incident - response groups as well as software vendors may continue to issue updates as new information about the vulnerability is discovered .

when a worm or virus is reported that exploits a vulnerability , virus detection software vendors also participate in the process .

such vendors develop and make available to their subscribers downloadable “signature files” that are used , in conjunction with their software , to identify and stop the virus or worm from infecting systems protected by their software .

the organization for internet safety ( ois ) , which consists of leading security researchers and vendors , recently issued a voluntary framework for vulnerability reporting and response .

recently , two critical vulnerabilities were discovered in widely used commercial software products .

the federal government and the private - sector security community took steps , described below in chronological order , to collaboratively respond to the threat of potential attacks against these vulnerabilities .

last stage of delirium research group discovered a security vulnerability in microsoft's windows distributed component object model ( dcom ) remote procedure call ( rpc ) interface .

this vulnerability would allow an attacker to gain complete control over a remote computer .

on june 28 , 2003 , the group notified microsoft about the rpc vulnerability .

within hours of being notified , microsoft verified the vulnerability .

on july 16 , microsoft issued a security bulletin publicly announcing the critical vulnerability and providing workaround instructions and a patch .

the following day , cert / cc issued its first advisory .

nine days after microsoft's announcement , on july 25 , xfocus , an organization that researches and demonstrates security vulnerabilities , released code that could be used to exploit the vulnerability .

on july 31 , cert / cc issued a second advisory reporting that multiple exploits had been publicly released , and encouraged all users to apply the patches .

on august 11 , 2003 , the blaster worm ( also known as lovsan ) was launched to exploit this vulnerability .

when the worm is successfully executed , it can cause the operating system to crash .

experts consider blaster , which affected a range of systems , to be one of the worst exploits of 2003 .

although the security community had received advisories from cert / cc and other organizations to patch this critical vulnerability , blaster reportedly infected more than 120,000 unpatched computers in the first 36 hours .

by the following day , reports began to state that many users were experiencing slowness and disruptions to their internet service , such as the need to frequently reboot .

the maryland motor vehicle administration was forced to shut down , and systems in both national and international arenas have also been affected .

the worm was programmed to launch a denial - of - service attack on microsoft's windows update web site www.windowsupdate.com ( where users can download security patches ) on august 16 .

microsoft preempted the worm's attack by disabling the windows update web site .

on august 14 , two variants to the original blaster worm were released .

federal agencies reported problems associated with these worms to fedcirc .

on august 18 , welchia , a worm that also exploits this vulnerability , was reported .

among other things , it attempts to apply the patch for the rpc vulnerability to vulnerable systems , but reportedly creates such high volumes of network traffic that it effectively denies services in infected networks .

media reports indicate that welchia affected several federal agencies , including components of the departments of defense and veterans affairs .

the federal government's response to this vulnerability included coordination with the private sector to mitigate the effects of the worm .

on july 17 , fedcirc issued an advisory to encourage federal agencies to patch the vulnerability , followed by several advisories from the department of homeland security ( dhs ) .

the following week , on july 24 , dhs issued its first advisory to heighten public awareness of the potential impact of an exploit of this vulnerability .

on july 28 , on behalf of the office of management and budget ( omb ) , fedcirc requested that federal agencies report on the status of their actions to patch the vulnerability .

from august 12 to august 18 , dhs's national cyber security division hosted several teleconferences with federal agencies , cert / cc , and microsoft .

figure 3 is a timeline of selected responses to the blaster internet worm .

based on an analysis of the agencies reported actions , as requested on july 28 , fedcirc indicated that many respondents had completed patch installation on all systems at the time of their report and that only a minimal number of infections by the blaster worm were reported .

cisco systems , inc. , which controls approximately 82 percent of the worldwide share of the internet router market , discovered a critical vulnerability in its internet operating system ( ios ) software .

this vulnerability could allow an intruder to effectively shut down unpatched routers , blocking network traffic .

cisco had informed the federal government of the vulnerability prior to public disclosure , and worked with different security organizations and government organizations to encourage prompt patching .

on july 16 , 2003 , cisco issued a security bulletin to publicly announce the critical vulnerability in its ios software , and provide workaround instructions and a patch .

cisco had planned to officially notify the public of the vulnerability on july 17 , but early media disclosure led them to announce the vulnerability a day earlier .

in addition , fedcirc issued advisories to federal agencies and dhs advised private - sector entities of the vulnerability .

in the week that the vulnerability was disclosed , fedcirc , omb , and dhs's national cyber security division held a number of teleconferences with representatives from the executive branch .

on july 17 , omb requested that federal agencies report to cert / cc on the status of their actions to patch the vulnerability by july 24 .

on july 18 , dhs issued an advisory update in response to an exploit that was posted online , and omb moved up the agencies' reporting deadline to july 22 .

cert / cc has received reports of attempts to exploit this vulnerability , but as of september 5 , no incidents have yet been reported .

patch management is a process used to help alleviate many of the challenges involved with securing computing systems from attack .

it is a component of configuration management that includes acquiring , testing , and applying patches to a computer system .

i will now discuss common patch management practices , federal efforts to address software vulnerabilities in agencies , and services and tools to assist in carrying out the patch management process .

effective patch management practices have been identified in security - related literature from several groups , including nist , microsoft , patch management software vendors , and other computer - security experts .

common elements identified include the following: senior executive support .

management recognition of information security risk and interest in taking steps to manage and understand risks , including ensuring that appropriate patches are deployed , is important to successfully implementing any information security – related process and ensuring that appropriate resources are applied .

standardized patch management policies , procedures , and tools .

without standardized policies and procedures in place , patch management can remain an ad - hoc process — potentially allowing each subgroup within an entity to implement patch management differently or not at all .

policies provide the foundation for ensuring that requirements are communicated across an entity .

in addition , selecting and implementing appropriate patch management tools is an important consideration for facilitating effective and efficient patch management .

dedicated resources and clearly assigned responsibilities .

it is important that the organization assign clear responsibility for ensuring that the patch management process is effective .

nist recommends creating a designated group whose duties would include supporting administrators in finding and fixing vulnerabilities in the organization's software .

it is also important that the individuals involved in patch management have the skills and knowledge needed to perform their responsibilities , and that systems administrators be trained regarding how to identify new patches and vulnerabilities .

current technology inventory .

creating and maintaining a current inventory of all hardware equipment , software packages , services , and other technologies installed and used by the organization is an essential element of successful patch management .

this systems inventory assists in determining the number of systems that are vulnerable and require remediation , as well as in locating the systems and identifying their owners .

identification of relevant vulnerabilities and patches .

it is important to proactively monitor for vulnerabilities and patches for all software identified in the systems inventory .

various tools and services are available to assist in identifying vulnerabilities and their respective patches .

using multiple sources can help to provide a more comprehensive view of vulnerabilities .

risk assessment .

when a vulnerability is discovered and a related patch and / or alternative workaround is released , the entity should consider the importance of the system to operations , the criticality of the vulnerability , and the risk of applying the patch .

since some patches can cause unexpected disruption to entities' systems , organizations may choose not to apply every patch , at least not immediately , even though it may be deemed critical by the software vendor that created it .

the likelihood that the patch will disrupt the system is a key factor to consider , as is the criticality of the system or process that the patch affects .

testing .

another critical step is to test each individual patch against various systems configurations in a test environment before installing it enterprisewide to determine any impact on the network .

such testing will help determine whether the patch functions as intended and its potential for adversely affecting the entity's systems .

in addition , while patches are being tested , organizations should also be aware of workarounds , which can provide temporary relief until a patch is applied .

testing has been identified as a challenge by government and private - sector officials , since the urgency in remediating a security vulnerability can limit or delay comprehensive testing .

time pressures can also result in software vendors' issuing poorly written patches that can degrade system performance and require yet another patch to remediate the problem .

for instance , microsoft has admittedly issued security patches that have been recalled because they have caused systems to crash or are too large for a computer's capacity .

further , a complex , heterogeneous systems environment can lengthen this already time - consuming and time - sensitive process because it takes longer to test the patch in various systems configurations .

distributing patches .

organizations can deploy patches to systems manually or by using an automated tool .

one challenge to deploying patches appropriately is that remote users may not be connected at the time of deployment , leaving the entity's networks vulnerable from the remote user's system because they have not yet been patched .

one private - sector entity stated that its network first became affected by the microsoft rpc vulnerability when remote users plugged their laptops into the network after being exposed to the vulnerability from other sources .

monitoring through network and host vulnerability scanning .

networks can be scanned on a regular basis to assess the network environment , and whether patches have been effectively applied .

systems administrators can take proactive steps to preempt computer security incidents within their entities by regularly monitoring the status of patches once they are deployed .

this will help to ensure patch compliance with the network's configuration .

the federal government has taken several steps to address security vulnerabilities that affect federal agency systems , including efforts to improve patch management .

nist has taken a number of steps , including , as i previously mentioned , providing a handbook for patch management .

in addition , nist offers a source of vulnerability data , which i will discuss later in this testimony .

further , in accordance with omb's reporting instructions for the first year implementation of the federal information security management act ( fisma ) , maintaining up - to - date patches is a part of fisma's system configuration requirements .

as such , omb requires that agencies report how they confirm that patches have been tested and installed in a timely manner .

in addition , certain governmentwide services are offered to federal agencies to assist them in ensuring that software vulnerabilities are patched .

for example , fedcirc was established to provide a central focal point for incident reporting , handling , prevention , and recognition for the federal government .

its purpose is to ensure that the government has critical services available in order to withstand or quickly recover from attacks against its information resources .

in addition , for the two recent vulnerabilities just discussed in my testimony , omb and fedcirc held teleconferences with agency chief information officers to discuss vulnerabilities and request that agencies report on the status of their actions to patch them .

an omb official indicated that they planned to hold meetings with agencies to discuss ways to improve communication of and followup on critical vulnerabilities , including addressing some of the challenges identified in the two recent exercises , such as delays in reaching key security personnel in certain instances .

fedcirc also initiated padc to provide users with a method of obtaining information on security patches relevant to their enterprise and access to patches that have been tested in a laboratory environment .

the federal government offers padc to federal civilian agencies at no cost .

according to fedcirc , as of last month , 41 agencies were using padc .

table 2 lists its features and benefits , as reported by fedcirc .

omb reported that while many agencies have established padc accounts , actual usage of those accounts is extremely low .

to participate in padc , subscribers ( who could be one or more individuals within an agency ) receive an account license that allows them to receive notifications and log into the secure web site to download the patch .

to establish an account , each subscriber must set up a profile defining the technologies that they use .

the profiles act much like a filtering service and allow padc to notify agencies of only the patches that pertain to their systems .

the profiles do not include system – specific information because of the sensitivity of that information .

subscribers using padc receive notification of threats , vulnerabilities , and the availability of patches on the basis of the submitted profiles .

they are notified by e - mail or pager message that a vulnerability or patch has been posted to a secure web site that affects one or all of their systems .

when a patch is identified , fedcirc , through contractor support , ensures that it originates from a reliable source .

the patch is then tested on a system to which it applies .

the installation of the patch and the operation of the system are monitored to ensure that the patch causes no problem .

next , if an exploit had been developed , exploit testing is performed to ensure that the patch fixes the vulnerability .

any issues identified with a patch are summarized and provided to the users .

the validated patch is then uploaded to padc servers and made available to users .

a patch is considered validated when it has been downloaded from a trusted source , authenticated , loaded onto an appropriate system , tested , exploit – tested , verified , and posted to the padc server .

this type of testing and validation is performed for over 60 technologies that , according to fedcirc officials , account for approximately 80 percent of the technologies used by federal agencies .

also available is notification of patches that are not validated for over 25,000 additional technologies .

according to fedcirc officials , high - priority patches are to be tested and posted on the padc server within the same business day of availability .

medium - and low - priority patches are to be completed by the following business day , but are generally available sooner .

however , because padc has several early warning mechanisms in place and arrangements with software vendors , some patches may be available as soon as a vulnerability is made public .

fedcirc officials emphasize that although the contractor tests the security patches , these tests do not ensure that the patch can be successfully deployed in another environment ; therefore , agencies still need to test the patch for compatibility with their own business processes and technology .

padc offers a reporting capability that is hierarchical .

senior managers can look at their complete system and see which subsystems have been patched .

these enterprisewide reports and statistics can be generated for a “reporting user” subscriber who has read - only capability within the system .

according to agency officials , there are limitations to the padc service .

although it is free to agencies , only about 2,000 licenses or accounts are available because of monetary constraints .

according to fedcirc officials , this requires them to work closely with participating agencies to balance the number of licenses that a single agency requires with the need to allow multiple agencies to participate .

for example , the national aeronautics and space administration initially requested over 3,000 licenses — one for each system administrator .

another agency , nist , thought that each of its users should have his or her own padc account .

another limitation is the level of services currently provided by padc .

at present , the government is considering broadening the scope of these services and capabilities , along with the number of users .

several services and automated tools are available to assist entities in performing the patch management function , including tools designed to be stand - alone patch management systems .

in addition , systems management tools can be used to deploy patches across an entity's network .

some of the features in services and tools typically include methods to inventory computers and the software applications and patches installed ; identify relevant patches and workarounds and gather them in one location ; group systems by departments , machine types , or other logical divisions to easily manage patch deployment ; scan a network to determine the status of the patches and other corrections made to network machines ( hosts and / or clients ) ; assess the machines against set criteria ; access a database of patches ; deploy effective patches ; and report information to various levels of management about the status of the network .

patch management vendors also offer central databases of the latest patches , incidents , and methods for mitigating risks before a patch can be deployed or a patch has been released .

some vendors provide support for multiple software platforms , such as microsoft , solaris , linux , and others , while others focus on certain platforms exclusively , such as microsoft .

patch management tools can be either scanner – based ( non agent ) or agent – based .

while scanner – based tools can scan a network , check for missing patches , and allow an administrator to patch multiple computers , these tools are best suited for smaller organizations due to their inability to serve a large number of users without breaking down or requiring major changes in procedure .

another difficulty with scanner - based tools is that part - time users and turned - off systems will not be scanned .

agent - based products place small programs , or agents , on each computer , to periodically poll a patch database — a server on the network — for new updates , giving the administrator the option of applying the patch .

agent - based products require up - front work to integrate agents into the workstations and in the server deployment process , but are better suited to large organizations due to their ability to generate less network traffic and provide a real - time network view .

the agents maintain information that can be reported when needed .

finally , some patch management tools are hybrids — allowing the user to utilize agents or not .

instead of an automated stand - alone system , entities can also use other methods and tools to perform patch management .

for example , they can maintain a database of the versions and latest patches for each server and each client in their network and track the security alerts and patches manually .

while labor - intensive , this can be done .

in addition , entities can employ systems management tools with patch - updating capabilities to deploy the patches .

this method requires monitoring for the latest security alerts and patches .

entities may also need to develop better relationships with their vendors to be alerted to vulnerabilities and patches prior to public release .

in addition , software vendors may provide automated tools with customized features to alert system administrators and users of the need to patch , and if desired , automatically apply patches .

a variety of resources are also available to provide information related to vulnerabilities and their exploits .

as i mentioned earlier , one resource is cert / cc , a major center for analyzing and reporting vulnerabilities as well as providing information on possible solutions .

another useful resource is nist's icat , which offers a searchable index leading users to vulnerability resources and patch information .

icat links users to publicly available vulnerability databases and patch sites , thus enabling them to find and fix vulnerabilities existing on their systems .

it is based on common vulnerability and exposures ( commonly referred to as cve ) naming standards .

these are standardized names for vulnerabilities and other information security exposures , compiled in an effort to make it easier to share data across separate vulnerability databases and tools .

many other organizations exist , including the last stage of delirium research group , that research security vulnerabilities and maintain databases of such vulnerabilities .

in addition , mailing lists , such as bugtraq , provide forums for announcing and discussing vulnerabilities , including information on how to fix them .

in addition , security focus monitors thousands of products to maintain a vulnerability database and provide security alerts .

finally , vendors such as microsoft and cisco provide software updates on their products , including notices of known vulnerabilities and their corresponding patches .

in addition to implementing effective patch management practices , several additional steps can be considered when addressing software vulnerabilities , including: deploying other technologies , such as antivirus software , firewalls , and other network security tools to provide additional defenses against attacks ; employing more rigorous engineering practices in designing , implementing , and testing software products to reduce the number of potential vulnerabilities ; improving tools to more effectively and efficiently manage patching ; researching and developing technologies to prevent , detect , and recover from attacks as well as identify their perpetrators , such as more sophisticated firewalls to keep serious attackers out , better intrusion - detection systems that can distinguish serious attacks from nuisance probes and scans , systems that can isolate compromised areas and reconfigure while continuing to operate , and techniques to identify individuals responsible for specific incidents ; and ensuring effective , tested contingency planning processes and procedures .

actions are already underway in many , if not all , of these areas .

for example , cert / cc has a research program , one goal of which is to try to find ways to improve technical approaches for identifying and preventing security flaws , for limiting the damage from attacks , and for ensuring that systems continue to provide essential services in spite of compromises and failures .

also , microsoft recently initiated its trustworthy computing strategy to incorporate security - focused software engineering practices throughout the design and deployment of its software , and is reportedly considering the use of automated patching in future products .

in summary , it is clear from the increasing number of reported attacks on information systems that both federal and private - sector operations and assets are at considerable — and growing — risk .

patch management can be an important element in mitigating the risks associated with software vulnerabilities , part of overall network configuration management and information security programs .

the challenge will be ensuring that a patch management process has adequate resources and appropriate policies , procedures , and tools to effectively identify vulnerabilities and patches that place an entity's systems at risk .

also critical is the capability to adequately test and deploy the patches , and then monitor progress to ensure that they work .

although this can currently be performed , the eventual solution will likely come from research and development to better build security into software and tools from the beginning .

mr. chairman , this concludes my statement .

i would be pleased to answer any questions that you or other members of the subcommittee may have at this time .

should you have any further questions about this testimony , please contact me at ( 202 ) 512-3317 or at daceyr@gao.gov .

individuals making key contributions to this testimony included shannin g. addison , michael p. fruitman , michael w. gilmore , sophia harrison , elizabeth l. johnston , min s. lee , and tracy c. pierson .

this is a work of the u.s. government and is not subject to copyright protection in the united states .

it may be reproduced and distributed in its entirety without further permission from gao .

however , because this work may contain copyrighted images or other material , permission from the copyright holder may be necessary if you wish to reproduce this material separately .

